package com.lenovo.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.lenovo.common.entity.ImageEntity;
import com.lenovo.common.entity.JoinImageLabelEntity;
import com.lenovo.common.entity.LabelAlbumEntity;
import com.lenovo.common.entity.JoinLabelAllbumEntity;
import com.lenovo.common.entity.LabelEntity;

import com.lenovo.greendao.gen.ImageEntityDao;
import com.lenovo.greendao.gen.JoinImageLabelEntityDao;
import com.lenovo.greendao.gen.LabelAlbumEntityDao;
import com.lenovo.greendao.gen.JoinLabelAllbumEntityDao;
import com.lenovo.greendao.gen.LabelEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig imageEntityDaoConfig;
    private final DaoConfig joinImageLabelEntityDaoConfig;
    private final DaoConfig labelAlbumEntityDaoConfig;
    private final DaoConfig joinLabelAllbumEntityDaoConfig;
    private final DaoConfig labelEntityDaoConfig;

    private final ImageEntityDao imageEntityDao;
    private final JoinImageLabelEntityDao joinImageLabelEntityDao;
    private final LabelAlbumEntityDao labelAlbumEntityDao;
    private final JoinLabelAllbumEntityDao joinLabelAllbumEntityDao;
    private final LabelEntityDao labelEntityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        imageEntityDaoConfig = daoConfigMap.get(ImageEntityDao.class).clone();
        imageEntityDaoConfig.initIdentityScope(type);

        joinImageLabelEntityDaoConfig = daoConfigMap.get(JoinImageLabelEntityDao.class).clone();
        joinImageLabelEntityDaoConfig.initIdentityScope(type);

        labelAlbumEntityDaoConfig = daoConfigMap.get(LabelAlbumEntityDao.class).clone();
        labelAlbumEntityDaoConfig.initIdentityScope(type);

        joinLabelAllbumEntityDaoConfig = daoConfigMap.get(JoinLabelAllbumEntityDao.class).clone();
        joinLabelAllbumEntityDaoConfig.initIdentityScope(type);

        labelEntityDaoConfig = daoConfigMap.get(LabelEntityDao.class).clone();
        labelEntityDaoConfig.initIdentityScope(type);

        imageEntityDao = new ImageEntityDao(imageEntityDaoConfig, this);
        joinImageLabelEntityDao = new JoinImageLabelEntityDao(joinImageLabelEntityDaoConfig, this);
        labelAlbumEntityDao = new LabelAlbumEntityDao(labelAlbumEntityDaoConfig, this);
        joinLabelAllbumEntityDao = new JoinLabelAllbumEntityDao(joinLabelAllbumEntityDaoConfig, this);
        labelEntityDao = new LabelEntityDao(labelEntityDaoConfig, this);

        registerDao(ImageEntity.class, imageEntityDao);
        registerDao(JoinImageLabelEntity.class, joinImageLabelEntityDao);
        registerDao(LabelAlbumEntity.class, labelAlbumEntityDao);
        registerDao(JoinLabelAllbumEntity.class, joinLabelAllbumEntityDao);
        registerDao(LabelEntity.class, labelEntityDao);
    }
    
    public void clear() {
        imageEntityDaoConfig.getIdentityScope().clear();
        joinImageLabelEntityDaoConfig.getIdentityScope().clear();
        labelAlbumEntityDaoConfig.getIdentityScope().clear();
        joinLabelAllbumEntityDaoConfig.getIdentityScope().clear();
        labelEntityDaoConfig.getIdentityScope().clear();
    }

    public ImageEntityDao getImageEntityDao() {
        return imageEntityDao;
    }

    public JoinImageLabelEntityDao getJoinImageLabelEntityDao() {
        return joinImageLabelEntityDao;
    }

    public LabelAlbumEntityDao getLabelAlbumEntityDao() {
        return labelAlbumEntityDao;
    }

    public JoinLabelAllbumEntityDao getJoinLabelAllbumEntityDao() {
        return joinLabelAllbumEntityDao;
    }

    public LabelEntityDao getLabelEntityDao() {
        return labelEntityDao;
    }

}
